//
// VehicleType.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct VehicleType: Codable {

    public enum NetworkDataProvider: String, Codable { 
        case openstreetmap = "openstreetmap"
        case tomtom = "tomtom"
    }
    /** Specifies the id of the vehicle type. If a vehicle needs to be of this type, it should refer to this with its type_id attribute. */
    public var typeId: String

    public var profile: Object?

    /** Specifies an array of capacity dimension values which need to be int values. For example, if there are two dimensions such as volume and weight then it needs to be defined as [ 1000, 300 ] assuming a maximum volume of 1000 and a maximum weight of 300. */
    public var capacity: [Int]?

    /** Specifies a speed factor for this vehicle type. If the vehicle that uses this type needs to be only half as fast as what is actually calculated with our routing engine then set the speed factor to 0.5. */
    public var speedFactor: Double?

    /** Specifies a service time factor for this vehicle type. If the vehicle/driver that uses this type is able to conduct the service as double as fast as it is determined in the corresponding service or shipment then set it to 0.5. */
    public var serviceTimeFactor: Double?

    /** **_BETA feature_**! Cost parameter per distance unit, here meter is used */
    public var costPerMeter: Double?

    /** **_BETA feature_**! Cost parameter per time unit, here second is used */
    public var costPerSecond: Double?

    /** **_BETA feature_**! Cost parameter vehicle activation, i.e. fixed costs per vehicle */
    public var costPerActivation: Double?

    /** Specifies whether traffic should be considered. if \&quot;tomtom\&quot; is used and this is false, free flow travel times from \&quot;tomtom\&quot; are calculated. If this is true, historical traffic info are used. We do not yet have traffic data for \&quot;openstreetmap\&quot;, thus, setting this true has no effect at all. */
    public var considerTraffic: Bool?
    /** Specifies the network data provider. Either use [&#x60;openstreetmap&#x60;](#section/Map-Data-and-Routing-Profiles/OpenStreetMap) (default) or [&#x60;tomtom&#x60;](#section/Map-Data-and-Routing-Profiles/TomTom) (add-on required). */
    public var networkDataProvider: NetworkDataProvider?
    public init(typeId: String, profile: Object?, capacity: [Int]?, speedFactor: Double?, serviceTimeFactor: Double?, costPerMeter: Double?, costPerSecond: Double?, costPerActivation: Double?, considerTraffic: Bool?, networkDataProvider: NetworkDataProvider?) { 
        self.typeId = typeId
        self.profile = profile
        self.capacity = capacity
        self.speedFactor = speedFactor
        self.serviceTimeFactor = serviceTimeFactor
        self.costPerMeter = costPerMeter
        self.costPerSecond = costPerSecond
        self.costPerActivation = costPerActivation
        self.considerTraffic = considerTraffic
        self.networkDataProvider = networkDataProvider
    }
    public enum CodingKeys: String, CodingKey { 
        case typeId = "type_id"
        case profile
        case capacity
        case speedFactor = "speed_factor"
        case serviceTimeFactor = "service_time_factor"
        case costPerMeter = "cost_per_meter"
        case costPerSecond = "cost_per_second"
        case costPerActivation = "cost_per_activation"
        case considerTraffic = "consider_traffic"
        case networkDataProvider = "network_data_provider"
    }

}
