//
// Solution.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation

/** Only available if status field indicates &#x60;finished&#x60;. */
public struct Solution: Codable {


    public var costs: Int?

    /** Overall distance travelled in meter, i.e. the sum of each route&#x27;s transport distance */
    public var distance: Int?

    /** Use &#x60;transport_time&#x60; instead. */
    public var time: Int64?

    /** Overall time travelled in seconds, i.e. the sum of each route&#x27;s transport time. */
    public var transportTime: Int64?

    /** Operation time of longest route in seconds. */
    public var maxOperationTime: Int64?

    /** Overall waiting time in seconds. */
    public var waitingTime: Int64?

    /** Overall service time in seconds. */
    public var serviceDuration: Int64?

    /** Overall preparation time in seconds. */
    public var preparationTime: Int64?

    /** Overall completion time in seconds, i.e. the sum of each routes/drivers operation time. */
    public var completionTime: Int64?

    /** Number of employed vehicles. */
    public var noVehicles: Int?

    /** Number of jobs that could not be assigned to final solution. */
    public var noUnassigned: Int?

    /** An array of routes */
    public var routes: [Route]?

    public var unassigned: SolutionUnassigned?
    public init(costs: Int?, distance: Int?, time: Int64?, transportTime: Int64?, maxOperationTime: Int64?, waitingTime: Int64?, serviceDuration: Int64?, preparationTime: Int64?, completionTime: Int64?, noVehicles: Int?, noUnassigned: Int?, routes: [Route]?, unassigned: SolutionUnassigned?) { 
        self.costs = costs
        self.distance = distance
        self.time = time
        self.transportTime = transportTime
        self.maxOperationTime = maxOperationTime
        self.waitingTime = waitingTime
        self.serviceDuration = serviceDuration
        self.preparationTime = preparationTime
        self.completionTime = completionTime
        self.noVehicles = noVehicles
        self.noUnassigned = noUnassigned
        self.routes = routes
        self.unassigned = unassigned
    }
    public enum CodingKeys: String, CodingKey { 
        case costs
        case distance
        case time
        case transportTime = "transport_time"
        case maxOperationTime = "max_operation_time"
        case waitingTime = "waiting_time"
        case serviceDuration = "service_duration"
        case preparationTime = "preparation_time"
        case completionTime = "completion_time"
        case noVehicles = "no_vehicles"
        case noUnassigned = "no_unassigned"
        case routes
        case unassigned
    }

}
